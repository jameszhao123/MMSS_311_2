a <- c(1,2,3,4,5)
Mindy <- 12
Mindy =
a <- c(1,2,3,4,5)
Mindy <- 12
Mindy
a <- c(1,2,3,4,5)
Mindy <- 12
a_matrix(a,nrow=3)
matrix(a,nrow=3)
a <- c(1,2,3,4,5)
Mindy <- 12
matrix(a,nrow=3)
a <- c(1,2,3,4,5)
Mindy <- 12
b <- c(1,2,3,4,5,6)
matrix(b,nrow=3)
a <- c(1,2,3,4,5)
Mindy <- 12
b <- c(1,2,3,4,5,6)
matrix(b,nrow=2)
a <- c(1,2,3,4,5)
Mindy <- 12
b <- c(1,2,3,4,5,6)
matrix(b,nrow=2)
matrix(b,ncolumn=2)
b <- c(1,2,3,4,5,6)
matrix(b,nrow=2)
matrix(b,ncol3)
b <- c(1,2,3,4,5,6)
matrix(b,nrow=2)
matrix(b,nrow=2, ncol=3)
b <- c(1,2,3,4,5,6)
matrix(b,nrow=2, ncol=3)
matrix(b,nrow=2, ncol=3, byrow=TRUE)
b <- c(1,2,3,4,5,6)
matrix(b,2,3,TRUE)
matrix(b,2,3)
b <- c(1,2,3,4,5,6)
matrix(b,2,3,TRUE)
matrix(b,2,3)
matrix(1,10,10)
wordvec <- c(THIS, IS, A, VECTOR)
wordvec <- c("THIS", "IS", "A", "VECTOR")
wordvec <- c("THIS", "IS", "A", "VECTOR")
wordvec
sum_of_any_three_numbers <- function(x,y,z) {
w <- x+y+z
return(w)
}
sum_of_any_three_numbers <- function(x,y,z) {
w <- x+y+z
return(w)
}
x<- 1
y<- 2
z<- 3
sum_of_any_three_numbers <- function(x,y,z) {
w <- x+y+z
return(w)
}
x <- 1
y <- 2
z <- 3
sum_of_any_three_numbers <- function(x,y,z) {
w <- x+y+z
return(w)
}
x <- 1
y <- 2
z <- 3
sum_of_any_three_numbers <- function(x,y,z) {
w <- x+y+z
}
sum_of_any_three_numbers <- function(x,y,z) {
w <- x+y+z
}
sum_of_any_three_numbers (x=1, y=2, z=3)
sum_of_any_three_numbers <- function(x,y,z) {
w <- x+y+z
}
sum_of_any_three_numbers (x=1, y=2, z=3)
x <- 1
y <- 2
z <- 3
sum_of_any_three_numbers <- function(x,y,z) {
w <- x+y+z
}
sum_of_three_numbers <- function(x,y,z) {
x+y+z
}
x <- 1
y <- 2
z <- 3
sum_of_three_numbers <- function(x,y,z) {
x+y+z
}
sum_of_three_numbers (1,2,3)
sum_of_three_numbers (1,2,6)
sum_of_three_numbers <- function(x,y,z) {
w <- x+y+z
}
sum_of_three_numbers (1,2,6)
x <- 1
y <- 2
z <- 3
sum_of_three_numbers <- function(x,y,z) {
w <- x+y+z
}
sum_of_three_numbers (1,2,6)
sum_of_three_numbers (1,2,6)
sum_of_three_numbers (1,2,6)
sum_of_three_numbers <- function(x,y,z) {
x+y+z
}
sum_of_three_numbers (1,2,6)
sum_of_three_numbers (1,2,6)
sum_of_three_numbers (1,2,6)
sum_of_three_numbers <- function(x,y,z) {
w <- x+y+z
}
sum_of_three_numbers (1,2,6)
sum_of_three_numbers (1,2,6)
sum_of_three_numbers <- function(x,y,z) {
w <- x+y+z
return(w)
}
sum_of_three_numbers (1,2,6)
sum_of_three_numbers <- function(x,y,z) {
w <- x+y+z
return(w)
}
sum_of_three_numbers (1,2,6)
sum_of_three_numbers <- function(x,y,z) {
x+y+z
}
sum_of_three_numbers (1,2,6)
check <- function(x) {
if (x<=10) {
result <- "Yes"
}
else if (x>10) {
result <- "No"
}
return(result)
}
check(x)
check <- function(x) {
if (x<=10) {
result <- "Yes"
}
else if (x>10) {
result <- "No"
}
return(result)
}
check(11)
check <- function(x) {
if (x<=10) {
result <- "Yes"
}
else if (x>10) {
result <- "No"
}
return(result)
}
check(9)
matrix(1,10,10)
check <- function(x) {
if (x<=10) {
result <- "Yes"
}
else if (x>10) {
result <- "No"
}
return(result)
}
check <- function(x) {
if (x<=10) {
result <- "Yes"
}
else if (x>10) {
result <- "No"
}
return(result)
}
check(11)
rnorm(1000,10,1)
g <- rnorm(1000,10,1)
g <- rnorm(1000,10,1)
g
y <- rnorm(1000,5,0.5)
y
check <- function(x) {
if (x<=10) {
result <- "Yes"
}
else if (x>10) {
result <- "No"
}
return(result)
}
check(9)
reg <- lm(y~x)
print(reg)
reg <- lm(y~g)
print(reg)
"PINCP_LOG" <- log"PINCP"
#Q2a Create an R script ﬁle that sets your working directory and loads the data.
setwd("~/GitHub/MMSS_311_2")
pums_chicago <- read.csv("pums_chicago.csv")
#2b How many variables are there in the dataset?
# There are 204 variables (from environment panel)
#2c What is the mean annual income, PINCP in this dataset?
PINCP_mean <- mean(pums_chicago$PINCP, na.rm = TRUE)
#2d Create a new variable in the PUMS dataframe called PINCP_LOG that is equal to the log of annual income. Were NaN values produced? Why?
#NaN values were produced because we cannot take log of 0, which is the value of some annual income observations.
pums_chicago$PINCP_LOG <- log(pums_chicago$PINCP)
#2e Create a new variable GRAD.DUMMY that takes the value “grad” if the respondent has any post-high school education, and “no grad” otherwise. Use the SCHL variable.
pums_chicago$GRAD.DUMMY <- ifelse(pums_chicago$SCHL > 17, "grad", "no grad")
#2f Drop the variable SERIALNO from the dataset.
pums_chicago$SERIALNO <- NULL
#2g Save your new dataset to a csv ﬁle in the working directory.
write.csv(pums_chicago,'editedPUMS_CHICAGO.csv')
#2h Use the variable ESR, create 5 new dataframes: under 16, employed, unemployed, in the armed forces, and not in the labor force.
under16 <- pums_chicago[pums_chicago$ESR == "NA", ]
employed <- pums_chicago[pums_chicago$ESR %in% c("1", "2"), ]
unemployed <- pums_chicago[pums_chicago$ESR == "3", ]
armedforces <- pums_chicago[pums_chicago$ESR %in% c("4", "5"), ]
notinlaborforce <- pums_chicago[pums_chicago$ESR == "6", ]
View(under16)
under16 <- pums_chicago[pums_chicago$ESR == c("NA"), ]
unemployed <- pums_chicago[pums_chicago$ESR == "3", ]
unemployed <- pums_chicago[pums_chicago$ESR == c("3"), ]
unemployed <- pums_chicago[pums_chicago$ESR %in% "3", ]
notinlaborforce <- pums_chicago[pums_chicago$ESR %in% "6", ]
under16 <- pums_chicago[pums_chicago$ESR %in% "NA", ]
employed <- pums_chicago[pums_chicago$ESR %in% c("1", "2"), ]
unemployed <- pums_chicago[pums_chicago$ESR %in% "3", ]
armedforces <- pums_chicago[pums_chicago$ESR %in% c("4", "5"), ]
notinlaborforce <- pums_chicago[pums_chicago$ESR %in% "6", ]
under16 <- pums_chicago[pums_chicago$ESR == "NA", ]
employed <- pums_chicago[pums_chicago$ESR %in% c("1", "2"), ]
unemployed <- pums_chicago[pums_chicago$ESR %in% "3", ]
armedforces <- pums_chicago[pums_chicago$ESR %in% c("4", "5"), ]
notinlaborforce <- pums_chicago[pums_chicago$ESR %in% "6", ]
library(knitr)
knitr::stitch('HW0_Final.r')
